#include <stdio.h>
#include <stdbool.h>
#include<stdlib.h>
typedef struct {
    int pid;     
    int bt;       
    int arrival;  
}Process;
bool compare_by_bt(const Process* a, const Process* b) {
    return a->bt < b->bt;
}
int main() {
    int n;
    printf("Enter the number of processes: ");
    scanf("%d", &n);
    Process processes[n];
    printf("Enter process IDs, burst times, and arrival times:\n");
    for (int i = 0; i < n; i++) {
        printf("Process %d: ", i + 1);
        scanf("%d %d %d", &processes[i].pid, &processes[i].bt, &processes[i].arrival);
    }
    qsort(processes, n, sizeof(Process), (int (*)(const void*, const void*))compare_by_bt);
    int current_time = 0;
    int completed = 0;
    while (completed < n) {
        int next_process = -1;
        for (int i = 0; i < n; i++) {
            if (processes[i].bt > 0 && processes[i].arrival <= current_time) {
                next_process = i;
                break;
            }
        }
        if (next_process == -1) {
            current_time++;
            continue;
        }
        printf("Process %d running at time %d\n", processes[next_process].pid, current_time);
        processes[next_process].bt--;
        current_time++;
        if (processes[next_process].bt == 0) {
            completed++;
        }
    }
    printf("\nScheduling completed.\n");
    return 0;
}
