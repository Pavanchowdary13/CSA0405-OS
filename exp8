#include <stdio.h>

#define MAX_PROCESSES 10
#define TIME_QUANTUM 4

struct Process {
    int id;
    int burst_time;
    int remaining_time;
};
void roundRobin(struct Process processes[], int n) {
    int remaining_processes = n;
    int current_time = 0;
    while (remaining_processes > 0) {
        for (int i = 0; i < n; i++) {
            if (processes[i].remaining_time > 0) {
                int execute_time = (processes[i].remaining_time >= TIME_QUANTUM) ? TIME_QUANTUM : processes[i].remaining_time;
                current_time += execute_time;
                processes[i].remaining_time -= execute_time;
                if (processes[i].remaining_time == 0) {
                    printf("Process %d completed at time %d\n", processes[i].id, current_time);
                    remaining_processes--;
                }
            }
        }
    }
}
int main() {
    struct Process processes[MAX_PROCESSES] = {
        {1, 8, 8},
        {2, 4, 4},
        {3, 5, 5},
        {4, 3, 3}
    };
    int num_processes = sizeof(processes) / sizeof(processes[0]);
    printf("Round Robin Scheduling Algorithm Simulation\n");
    roundRobin(processes, num_processes);
    return 0;
}
